{"version":3,"sources":["types/Status.ts","features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Status","todoActions","todo","type","payload","currentTodoReducer","state","action","initialFilter","query","status","All","filterActions","filterReducer","todosActions","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","useState","visibleTodos","setVisibleTodos","useEffect","queryNormalized","trim","toLowerCase","filteredTodosByQuery","Active","completed","Completed","title","includes","isTodosNotFound","length","className","map","id","classNames","onClick","setTodo","TodoFilter","onSubmit","event","preventDefault","value","onChange","ev","statusToSet","target","Object","keys","key","placeholder","str","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","getUser","userId","TodoModal","isLoading","setIsLoading","user","setUser","a","todoUser","loadUser","isTodoFound","href","email","name","App","selectedTodo","setTodos","newTodos","todosFromServer","loadTodos","isTodosFound","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b87aa11.chunk.js","sourcesContent":["export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport const todoActions = { setTodo, removeTodo };\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetQueryAction = {\n  type: 'filter/QUERY_SET',\n  payload: string,\n};\n\ntype ClearQueryAction = {\n  type: 'filter/QUERY_CLEAR',\n};\n\ntype SetStatusAction = {\n  type: 'filter/STATUS_SET',\n  payload: Status,\n};\n\nconst setQuery = (query: string): SetQueryAction => ({\n  type: 'filter/QUERY_SET',\n  payload: query,\n});\n\nconst clearQuery = (): ClearQueryAction => ({\n  type: 'filter/QUERY_CLEAR',\n});\n\nconst setStatus = (status: Status): SetStatusAction => ({\n  type: 'filter/STATUS_SET',\n  payload: status,\n});\n\ntype State = {\n  query: string,\n  status: string,\n};\n\ntype Actions = SetQueryAction | ClearQueryAction | SetStatusAction;\n\nconst initialFilter = {\n  query: '',\n  status: Status.All,\n};\n\nconst filterReducer = (\n  state: State = initialFilter,\n  action: Actions,\n): State => {\n  switch (action.type) {\n    case 'filter/QUERY_CLEAR':\n      return { ...state, query: '' };\n\n    case 'filter/QUERY_SET':\n      return { ...state, query: action.payload };\n\n    case 'filter/STATUS_SET':\n      return { ...state, status: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport const filterActions = { setQuery, clearQuery, setStatus };\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'todos/SET',\n  payload: Todo[],\n};\n\nconst setTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\ntype State = Todo[] | [];\ntype Action = SetTodosAction;\n\nconst todosReducer = (\n  state: State = [],\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport const todosActions = { setTodos };\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { todoActions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\nimport { Status } from '../../types/Status';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const todos = useAppSelector(state => state.todos);\n  const [visibleTodos, setVisibleTodos] = useState(todos);\n  const { query, status } = useAppSelector(state => state.filter);\n\n  const setTodo = (todo: Todo) => dispatch(todoActions.setTodo(todo));\n\n  useEffect(() => {\n    const queryNormalized = query.trim().toLowerCase();\n    const filteredTodosByStatus = todos.filter(todo => {\n      switch (status) {\n        case Status.Active:\n          return !todo.completed;\n\n        case Status.Completed:\n          return todo.completed;\n\n        case Status.All:\n        default:\n          return true;\n      }\n    });\n\n    const filteredTodosByQuery = filteredTodosByStatus.filter(todo => todo.title\n      .toLowerCase()\n      .includes(queryNormalized));\n\n    setVisibleTodos(filteredTodosByQuery);\n  }, [todos, query, status]);\n\n  const isTodosNotFound = visibleTodos.length === 0;\n\n  return (\n    <>\n      {isTodosNotFound && (\n        <p className=\"notification is-warning\">\n          There are no todos matching current filter criteria\n        </p>\n      )}\n\n      {!isTodosNotFound && (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {visibleTodos.map(todo => (\n              <tr data-cy=\"todo\" key={todo.title}>\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n\n                <td className=\"is-vcentered is-expanded\">\n                  <p\n                    className={classNames(todo.completed ? 'has-text-success' : 'has-text-danger')}\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => setTodo(todo)}\n                  >\n                    <span className=\"icon\">\n                      <i className=\"far fa-eye\" />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { query, status } = useAppSelector(state => state.filter);\n\n  const handleInputChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    const str = ev.target.value;\n\n    dispatch(filterActions.setQuery(str));\n  };\n\n  const handleInputClear = () => dispatch(filterActions.clearQuery());\n\n  const handleSelectChange = (ev: React.ChangeEvent<HTMLSelectElement>) => {\n    const statusToSet = ev.target.value as Status;\n\n    dispatch(filterActions.setStatus(statusToSet as Status));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handleSelectChange}\n          >\n            {Object.keys(Status).map(key => (\n              <option key={key} value={key.toLowerCase()}>\n                {key}\n              </option>\n            ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={handleInputClear}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { todoActions } from '../../features/currentTodo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\nexport const TodoModal: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [user, setUser] = useState<User | null>(null);\n  const dispatch = useAppDispatch();\n  const todo = useAppSelector(state => state.currentTodo);\n\n  const removeTodo = () => dispatch(todoActions.removeTodo());\n\n  async function loadUser(id: number) {\n    try {\n      setIsLoading(true);\n      const todoUser = await getUser(id);\n\n      setUser(todoUser);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (todo) {\n      loadUser(todo.id);\n    }\n  }, []);\n\n  const isTodoFound = todo && user && !isLoading;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && <Loader />}\n\n      {isTodoFound && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={removeTodo}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { todosActions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useAppDispatch();\n  const todos = useAppSelector(state => state.todos);\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n\n  const setTodos = (newTodos: Todo[]) => dispatch(todosActions.setTodos(newTodos));\n\n  async function loadTodos() {\n    try {\n      setIsLoading(true);\n      const todosFromServer = await getTodos();\n\n      setTodos(todosFromServer);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const isTodosFound = todos.length > 0 && !isLoading;\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              {isTodosFound && <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}